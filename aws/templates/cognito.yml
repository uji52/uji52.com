AWSTemplateFormatVersion: '2010-09-09'
Description: Cognito User Pool and Identity Pool

Parameters:
  GoogleClientId:
    Type: String
    Description: Google OAuth Client ID
  GoogleClientSecret:
    Type: String
    Description: Google OAuth Client Secret
    NoEcho: true
  CertificateArn:
    Type: String
    Description: ACM Certificate ARN for Cognito Domain
  HostedZoneId:
    Type: String
    Description: Route53 Hosted Zone ID for uji52.com
  Environment:
    Type: String
    Description: 'dev or prd'
    AllowedValues:
      - dev
      - prd

Conditions:
  IsDev: !Equals [ !Ref Environment, 'dev' ]
  IsPrd: !Equals [ !Ref Environment, 'prd' ]

Resources:
  UserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: !Sub ${AWS::StackName}-user-pool
      AdminCreateUserConfig:
        AllowAdminCreateUserOnly: false
      AutoVerifiedAttributes:
        - email
      UsernameAttributes:
        - email
      Schema:
        - Name: email
          AttributeDataType: String
          Mutable: true
          Required: true

  UserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    DependsOn: UserPoolIdentityProvider
    Properties:
      UserPoolId: !Ref UserPool
      ClientName: !Sub ${AWS::StackName}-app-client
      GenerateSecret: false
      AllowedOAuthFlows:
        - implicit
        - code
      AllowedOAuthFlowsUserPoolClient: true
      AllowedOAuthScopes:
        - email
        - openid
        - profile
      SupportedIdentityProviders:
        - COGNITO
        - Google
      CallbackURLs:
        - https://www.uji52.com/signin/callback
        - https://dev.uji52.com/signin/callback
      LogoutURLs:
        - https://www.uji52.com/signout
        - https://dev.uji52.com/signout

  UserPoolIdentityProvider:
    Type: AWS::Cognito::UserPoolIdentityProvider
    Properties:
      UserPoolId: !Ref UserPool
      ProviderName: Google
      ProviderType: Google
      ProviderDetails:
        client_id: !Ref GoogleClientId
        client_secret: !Ref GoogleClientSecret
        authorize_scopes: email profile openid
      AttributeMapping:
        email: email
        given_name: given_name
        family_name: family_name

  IdentityPool:
    Type: AWS::Cognito::IdentityPool
    Properties:
      IdentityPoolName: !Sub ${AWS::StackName}-identity-pool
      AllowUnauthenticatedIdentities: false
      CognitoIdentityProviders:
        - ClientId: !Ref UserPoolClient
          ProviderName: !Sub "cognito-idp.${AWS::Region}.amazonaws.com/${UserPool}"
          ServerSideTokenCheck: true

  IdentityPoolRoleAttachment:
    Type: AWS::Cognito::IdentityPoolRoleAttachment
    Properties:
      IdentityPoolId: !Ref IdentityPool
      Roles:
        authenticated: !GetAtt AuthenticatedRole.Arn
        unauthenticated: !GetAtt UnauthenticatedRole.Arn

  AuthenticatedRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Federated: cognito-identity.amazonaws.com
            Action: sts:AssumeRoleWithWebIdentity
            Condition:
              StringEquals:
                'cognito-identity.amazonaws.com:aud': !Ref IdentityPool
              'ForAnyValue:StringLike':
                'cognito-identity.amazonaws.com:amr': authenticated

  UnauthenticatedRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Federated: cognito-identity.amazonaws.com
            Action: sts:AssumeRoleWithWebIdentity
            Condition:
              StringEquals:
                'cognito-identity.amazonaws.com:aud': !Ref IdentityPool
              'ForAnyValue:StringLike':
                'cognito-identity.amazonaws.com:amr': unauthenticated

Outputs:
  UserPoolId:
    Value: !Ref UserPool
    Description: Cognito User Pool ID
  UserPoolClientId:
    Value: !Ref UserPoolClient
    Description: Cognito User Pool Client ID
  IdentityPoolId:
    Value: !Ref IdentityPool
    Description: Cognito Identity Pool ID
  UserPoolDomainName:
    Value: !Sub auth-${Environment}.uji52.com
    Description: Cognito User Pool Domain Name
